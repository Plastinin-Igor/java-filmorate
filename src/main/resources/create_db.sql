-- filmorate."user" definition

-- Drop table

-- DROP TABLE filmorate."user";

create TABLE filmorate."user" (
	user_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор пользователя
	email varchar(50) NOT NULL, -- Адрес электронной почты
	login varchar(50) NOT NULL, -- Логин пользователя
	"name" varchar(150) NOT NULL, -- Имя пользователя
	birthday date NOT NULL, -- Дата рождения
	CONSTRAINT user_email_uk UNIQUE (email),
	CONSTRAINT user_login_uk UNIQUE (login),
	CONSTRAINT user_pk PRIMARY KEY (user_id)
);
comment on table filmorate."user" is 'Пользователи';

-- Column comments

comment on column filmorate."user".user_id is 'Уникальный идентификатор пользователя';
comment on column filmorate."user".email is 'Адрес электронной почты';
comment on column filmorate."user".login is 'Логин пользователя';
comment on column filmorate."user"."name" is 'Имя пользователя';
comment on column filmorate."user".birthday is 'Дата рождения';


-- filmorate.genre definition

-- Drop table

-- DROP TABLE filmorate.genre;

create TABLE filmorate.genre (
	genre_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Идентификатор жанра
	genre_name varchar(50) NOT NULL, -- Жанр
	CONSTRAINT genre_pk PRIMARY KEY (genre_id),
	CONSTRAINT genre_uk UNIQUE (genre_name)
);
comment on table filmorate.genre is 'Жанры';

-- Column comments

comment on column filmorate.genre.genre_id is 'Идентификатор жанра';
comment on column filmorate.genre.genre_name is 'Жанр';


-- filmorate.rating_mpa definition

-- Drop table

-- DROP TABLE filmorate.rating_mpa;

create TABLE filmorate.rating_mpa (
	mpa_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Идентификатор рейтинга
	rating varchar(15) NOT NULL, -- Рейтинг
	description varchar(50) NULL, -- Описание
	CONSTRAINT rating_mpa_pk PRIMARY KEY (mpa_id),
	CONSTRAINT rating_mpa_uk UNIQUE (rating)
);
comment on table filmorate.rating_mpa is 'Рейтинг Ассоциации кинокомпаний (Motion Picture Association - МРА)';

-- Column comments

comment on column filmorate.rating_mpa.mpa_id is 'Идентификатор рейтинга';
comment on column filmorate.rating_mpa.rating is 'Рейтинг';
comment on column filmorate.rating_mpa.description is 'Описание';


-- filmorate.film definition

-- Drop table

-- DROP TABLE filmorate.film;

create TABLE filmorate.film (
	film_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор фильма
	"name" varchar(150) NOT NULL, -- Название фильма
	description varchar(200) NULL, -- Описание фильма
	releasedate date NOT NULL, -- Дата релиза
	duration int4 NOT NULL, -- Продолжительность фильма
	rating int4 NOT NULL DEFAULT 0, -- Рейтинг
	CONSTRAINT film_name_release_date_uk UNIQUE (name, releasedate),
	CONSTRAINT film_pk PRIMARY KEY (film_id),
	CONSTRAINT film_fk FOREIGN KEY (rating) REFERENCES filmorate.rating_mpa(mpa_id)
);
comment on table filmorate.film is 'Фильмы';

-- Column comments

comment on column filmorate.film.film_id is 'Уникальный идентификатор фильма';
comment on column filmorate.film."name" is 'Название фильма';
comment on column filmorate.film.description is 'Описание фильма';
comment on column filmorate.film.releasedate is 'Дата релиза';
comment on column filmorate.film.duration is 'Продолжительность фильма';
comment on column filmorate.film.rating is 'Рейтинг';


-- filmorate.likes definition

-- Drop table

-- DROP TABLE filmorate.likes;

create TABLE filmorate.likes (
	likes_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор
	film_id int4 NOT NULL, -- Идентификатор фильма
	user_id int4 NOT NULL, -- Идентификатор пользователя
	CONSTRAINT likes_pk PRIMARY KEY (likes_id),
	CONSTRAINT likes_film_fk FOREIGN KEY (film_id) REFERENCES filmorate.film(film_id),
	CONSTRAINT likes_user_fk FOREIGN KEY (user_id) REFERENCES filmorate."user"(user_id)
);
comment on table filmorate.likes is 'Лайки';

-- Column comments

comment on column filmorate.likes.likes_id is 'Уникальный идентификатор';
comment on column filmorate.likes.film_id is 'Идентификатор фильма';
comment on column filmorate.likes.user_id is 'Идентификатор пользователя';


-- filmorate.friends definition

-- Drop table

-- DROP TABLE filmorate.friends;

create TABLE filmorate.friends (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор
	user_id int4 NOT NULL, -- Пользователь
	friend_id int4 NOT NULL, -- Друг
	sign_friendship bool NOT NULL DEFAULT false, -- Признак подтверждения дружбы
	CONSTRAINT friends_pk PRIMARY KEY (id),
	CONSTRAINT friends_friend_fk FOREIGN KEY (friend_id) REFERENCES filmorate."user"(user_id),
	CONSTRAINT friends_user_fk FOREIGN KEY (user_id) REFERENCES filmorate."user"(user_id)
);
comment on table filmorate.friends is 'Друзья';

-- Column comments

comment on column filmorate.friends.id is 'Уникальный идентификатор';
comment on column filmorate.friends.user_id is 'Пользователь';
comment on column filmorate.friends.friend_id is 'Друг';
comment on column filmorate.friends.sign_friendship is 'Признак подтверждения дружбы';


-- filmorate.film_genre definition

-- Drop table

-- DROP TABLE filmorate.film_genre;

create TABLE filmorate.film_genre (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор
	film_id int4 NOT NULL, -- Фильм
	genre_id int4 NOT NULL, -- Жанр
	CONSTRAINT film_genre_pk PRIMARY KEY (id),
	CONSTRAINT film_genre_uk UNIQUE (film_id, genre_id),
	CONSTRAINT film_genre_film_fk FOREIGN KEY (film_id) REFERENCES filmorate.film(film_id),
	CONSTRAINT film_genre_genre_fk FOREIGN KEY (genre_id) REFERENCES filmorate.genre(genre_id)
);
comment on table filmorate.film_genre is 'Жанры фильмов';

-- Column comments

comment on column filmorate.film_genre.id is 'Уникальный идентификатор';
comment on column filmorate.film_genre.film_id is 'Фильм';
comment on column filmorate.film_genre.genre_id is 'Жанр';